{"version":3,"sources":["assets/icons/apple.svg","assets/icons/avocado.svg","assets/icons/bananas.svg","assets/icons/cherry.svg","assets/icons/coconut.svg","assets/icons/fig.svg","assets/icons/grapes.svg","assets/icons/guava.svg","assets/icons/kiwi.svg","assets/icons/mangosteen.svg","assets/icons/melon.svg","assets/icons/orange.svg","assets/icons/papaya.svg","assets/icons/peach.svg","assets/icons/pear.svg","assets/icons/pineapple.svg","assets/icons/pitaya.svg","assets/icons/strawberry.svg","assets/icons/watermelon.svg","components/SlotMachineTs/utilits.ts","components/SlotMachineTs/Slot.tsx","components/Button/index.ts","components/Button/Button.tsx","components/NeonSign/index.ts","components/NeonSign/NeonSign.tsx","components/SlotMachineTs/SlotMachineTs.tsx","components/App/index.ts","components/App/App.tsx","components/ErrorIndicator/index.ts","components/ErrorIndicator/ErrorIndicator.tsx","components/ErrorBoundry/index.ts","components/ErrorBoundry/ErrorBoundry.tsx","index.tsx"],"names":["module","exports","getShuffledArr","arr","newArr","slice","i","length","rand","Math","floor","random","randomInteger","min","max","Slot","list","num","spinning","callAnimationStart","callAnimationIteration","callbackAnimationEnd","useState","row","slotHeight","listArr","setListArr","transformHeight","setTransformHeight","transitionTime","setTransitionTime","useEffect","listCln","slotRender","map","itm","idx","key","src","alt","className","onAnimationStart","onAnimationIteration","onAnimationEnd","style","transition","transform","Button","name","color","info","callback","onClick","NeonSign","fontSize","children","SlotMachineTs","slotsList","slots","slotNum","oneRowHeight","allRowsHeight","setAllRowsHeight","slotArr","setSpinning","console","log","height","result","push","slotsrender","Date","now","App","rowsAdd","setRowsAdd","slotsAdd","setSlotsAddAdd","arrSlot","apple","avocado","bananas","cherry","coconut","fig","grapes","guava","kiwi","mangosteen","melon","orange","papaya","peach","pear","pineapple","pitaya","strawberry","watermelon","handleChInput","id","e","val","parseInt","target","value","htmlFor","defaultValue","onChange","placeholder","type","href","ErrorIndicator","role","ErrorBoundry","props","state","hasError","error","errorInfo","this","setState","toString","componentStack","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2907f6da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/apple.1650a1ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/avocado.0b3877e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/bananas.886be8da.svg\";","module.exports = __webpack_public_path__ + \"static/media/cherry.bded55a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/coconut.31dd7faf.svg\";","module.exports = __webpack_public_path__ + \"static/media/fig.0dd83edb.svg\";","module.exports = __webpack_public_path__ + \"static/media/grapes.3c05444c.svg\";","module.exports = __webpack_public_path__ + \"static/media/guava.156c6d2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/kiwi.4f414416.svg\";","module.exports = __webpack_public_path__ + \"static/media/mangosteen.6e5d6773.svg\";","module.exports = __webpack_public_path__ + \"static/media/melon.410f9464.svg\";","module.exports = __webpack_public_path__ + \"static/media/orange.29436d46.svg\";","module.exports = __webpack_public_path__ + \"static/media/papaya.5fee44d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/peach.697e1277.svg\";","module.exports = __webpack_public_path__ + \"static/media/pear.104e514e.svg\";","module.exports = __webpack_public_path__ + \"static/media/pineapple.2b66c310.svg\";","module.exports = __webpack_public_path__ + \"static/media/pitaya.ec7752d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/strawberry.0457e7cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/watermelon.16f5b0d6.svg\";","interface IgetShuffledArr{\n    (arr: any[]): any[]\n}\n\ninterface IrandomInteger {\n    (min: number, max: number): number\n}\n\n/**     ****        **/\n\nconst getShuffledArr: IgetShuffledArr = function(arr){\n\n    const newArr = arr.slice();\n    for (let i = newArr.length - 1; i > 0; i--) {\n        const rand = Math.floor(Math.random() * (i + 1));\n        [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\n    }\n    return newArr\n};\n\nconst randomInteger: IrandomInteger = function (min=0,max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n\nexport {\n    getShuffledArr,\n    randomInteger\n}","import React, {useEffect, useState} from \"react\";\nimport {randomInteger} from './utilits';\n\ninterface ISlot {\n    list:any[],\n    spinning?:number,\n    num?:number,\n    callbackAnimationEnd?():void,\n    callAnimationIteration?():void,\n    callAnimationStart?():void,\n}\n\n\nconst Slot: React.FC<ISlot> = ({list,num,spinning,callAnimationStart,callAnimationIteration,callbackAnimationEnd}) =>{\n\n    const [row,] = useState<number>(3);\n    const [slotHeight,] = useState<number>(110);\n    const [listArr,setListArr] = useState<any[]>([]);\n\n    const [transformHeight,setTransformHeight] = useState<number>(0);\n    const [transitionTime,setTransitionTime] = useState<number>(1);\n\n\n    useEffect(()=>{\n\n        const listCln = num ? list.slice(0,num) : list;\n\n        setListArr(listCln);\n\n            setTransformHeight((listCln.length - row - randomInteger(row,listCln.length)) * slotHeight - 15);\n            setTransitionTime(randomInteger(600,1200));\n\n\n\n    },[list,spinning,row,slotHeight]);\n\n\n    const slotRender = listArr.map((itm:any,idx:number) =>(\n        <li\n            key={idx}\n        ><img src={itm} alt={`pic-${idx}`} className={`icon`}/></li>\n    ));\n\n    return(<div\n        className={`slot`}\n    ><ul\n\n        onAnimationStart={callAnimationStart}\n        onAnimationIteration={callAnimationIteration}\n        onAnimationEnd={callbackAnimationEnd}\n\n        style={{\n            transition: `transform ${transitionTime}ms linear`,\n            transform: `translate3d(0,-${transformHeight}px,0)`\n        }}\n\n        >{slotRender}</ul></div>);\n\n\n};\n\nexport default Slot;","import Button from './Button';\n\nexport default Button;","import React from \"react\";\nimport './Button.scss';\n\n\n\ninterface IButton {\n    name?:string,\n    info?:string,\n    color?:string,\n    callback():void\n}\n\nconst Button: React.FC<IButton> = ({name,color='yellow',info,callback}) =>{\n\n\n\n    return(<div\n                className={`Button`}\n                >\n                                    <button\n                                        onClick={callback}\n                                        className={`round ${color}`}\n                                    >{name}\n                                    <div\n                                        className=\"round\"\n                                    >{info}</div>\n                                    </button>\n        </div>);\n};\n\n\n\nexport default Button;","import NeonSign from './NeonSign';\n\n\nexport default NeonSign;","import React from \"react\";\nimport './NeonSign.scss';\n\n\ninterface INeonSign {\n    children:any,\n    fontSize?:number,\n}\n\n\nconst NeonSign: React.FC<INeonSign> = ({fontSize,children}) =>{\n\n\n    return(<div\n                style={{fontSize:`${fontSize || 4.3}vw`}}\n                className={`NeonSign`}\n            >{children}</div>);\n};\n\n\nexport default NeonSign;","import React, {useEffect, useState} from \"react\";\n\nimport {getShuffledArr} from './utilits';\n\nimport Slot from './Slot';\nimport Button from '../Button';\nimport NeonSign from '../NeonSign';\n\nimport './SlotMachineTs.scss';\n\n\n\ninterface ISlotMachineTs {\n    slotsList:any[],\n    slots?:number,\n    row?:number,\n}\n\n\nconst SlotMachineTs: React.FC<ISlotMachineTs> = ({slotsList,row=3,slots= 1}) =>{\n\n\n    const [slotNum,] = useState<number>(0);\n\n    const [oneRowHeight,] = useState<number>(110);\n\n    const [allRowsHeight,setAllRowsHeight] = useState<number>(oneRowHeight*row);\n\n    const [slotArr, setSlotArr] = useState<any[]>(getShuffledArr(slotsList));\n\n    const [spinning, setSpinning] = useState<number>(0);\n\n\n    useEffect(()=>{\n        setAllRowsHeight(oneRowHeight*row)\n    },[row]);\n\n\n    const handleClickRepeat = ():void =>{\n        setSpinning(Date.now());\n\n    };\n\n\n\n    const onAnimationEnd = ():void =>{\n            console.log(`onAnimationEnd`,{spinning});\n    };\n\n\n    const slotsrender =  ():any[] =>{\n                                        let result:any[] = [];\n\n                                            for(let i:number = 1; i<=slots;i++){\n                                                result.push(<Slot\n                                                    spinning={spinning}\n                                                    callbackAnimationEnd={onAnimationEnd}\n                                                    key={`slotsrender-${i}`}\n                                                    num={slotNum}\n                                                    list={getShuffledArr(slotArr)}\n                                                />);\n                                            }\n                                            return result;\n                                        };\n\n\n\n    return(<div className={`SlotMachineTs`}>\n\n        <div className={`wrap`}>\n\n            <div className={`title`}>\n                <NeonSign>\n                    SlotMachine_Ts\n                </NeonSign>\n\n            </div>\n\n            <div className={`slots`}>\n                <div\n                    style={{height:allRowsHeight + 10}}\n                    className={`col`}\n                >\n\n                   {\n                       !slots\n                           ? <Slot\n                               callbackAnimationEnd={onAnimationEnd}\n                                    spinning={spinning}\n                                    num={slotNum}\n                                    list={slotArr}\n                                />\n                           : slotsrender()\n                   }\n\n                </div>\n\n            </div>\n\n            <div className={`refresh`}>\n                <Button\n                name={`go`}\n                info={`repeat`}\n                callback={handleClickRepeat}\n                />\n\n            </div>\n\n        </div>\n\n\n    </div>);\n};\n\n\nexport default SlotMachineTs;","import App from \"./App\";\n\nexport default App;","import React, {useState} from 'react';\nimport {SlotMachineTs} from '../SlotMachineTs';\nimport NeonSign from '../NeonSign';\nimport '../../assets/scss/style.scss';\nimport './App.scss';\n\n\n\nimport apple from \"../../assets/icons/apple.svg\";\nimport avocado from \"../../assets/icons/avocado.svg\";\nimport bananas from \"../../assets/icons/bananas.svg\";\nimport cherry from \"../../assets/icons/cherry.svg\";\nimport coconut from \"../../assets/icons/coconut.svg\";\nimport fig from \"../../assets/icons/fig.svg\";\nimport grapes from \"../../assets/icons/grapes.svg\";\nimport guava from \"../../assets/icons/guava.svg\";\nimport kiwi from \"../../assets/icons/kiwi.svg\";\nimport mangosteen from \"../../assets/icons/mangosteen.svg\";\nimport melon from \"../../assets/icons/melon.svg\";\nimport orange from \"../../assets/icons/orange.svg\";\nimport papaya from \"../../assets/icons/papaya.svg\";\nimport peach from \"../../assets/icons/peach.svg\";\nimport pear from \"../../assets/icons/pear.svg\";\nimport pineapple from \"../../assets/icons/pineapple.svg\";\nimport pitaya from \"../../assets/icons/pitaya.svg\";\nimport strawberry from \"../../assets/icons/strawberry.svg\";\nimport watermelon from \"../../assets/icons/watermelon.svg\";\n\ninterface IhandleChInput {\n    id?:string,\n}\n\nconst App: React.FC = () => {\n\n    const [rowsAdd,setRowsAdd] = useState<number>(3);\n    const [slotsAdd,setSlotsAddAdd] = useState<number>(3);\n\n    const arrSlot: any[] = [\n        'https://mrzlab630.github.io/SlotMachine_Ts'+apple,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+avocado,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+bananas,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+cherry,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+coconut,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+fig,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+grapes,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+guava,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+kiwi,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+mangosteen,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+melon,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+orange,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+papaya,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+peach,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+pear,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+pineapple,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+pitaya,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+strawberry,\n        'https://mrzlab630.github.io/SlotMachine_Ts'+watermelon];\n\n\n\n    const handleChInput = (id?:string) => (e: React.ChangeEvent<HTMLInputElement>) =>{\n\n        if(!id){\n        return false;\n        }\n\n        const val:number =parseInt(e.target.value, 10) || 1;\n\n        if(id === 'rows'){\n            setRowsAdd(val);\n        }\n\n        if(id === 'slots'){\n            setSlotsAddAdd(val);\n        }\n        return false;\n\n    };\n\n\n    return (\n        <div className=\"App\">\n\n\n            <div className={`tools`}>\n                <ul>\n                    <li>\n                        <label\n                            htmlFor={`rows`}\n                        >\n                            <NeonSign fontSize={4}>rows</NeonSign>\n                        </label>\n                        <input\n                            id={`rows`}\n                            min={1}\n                            defaultValue={rowsAdd}\n                            onChange={handleChInput(`rows`)}\n                            placeholder={`rows`}\n                            type={`number`}\n                        />\n                    </li>\n                    <li>\n                        <label\n                            htmlFor={`slots`}\n                        >\n                            <NeonSign fontSize={4}>slots</NeonSign>\n\n                        </label>\n                        <input\n                            id={`slots`}\n                            min={1}\n                            defaultValue={slotsAdd}\n                            onChange={handleChInput(`slots`)}\n                            placeholder={`slots`}\n                            type={`number`}\n                        />\n                    </li>\n                </ul>\n\n\n            </div>\n\n        <div className=\"author\">\n            <a href={`https://github.com/mrzlab630/SlotMachine_Ts`}> <NeonSign fontSize={4}>>by mrZLab630</NeonSign></a>\n        </div>\n\n           <SlotMachineTs\n               row={rowsAdd}\n               slots={slotsAdd}\n               slotsList={arrSlot}\n           />\n        </div>\n    );\n};\n\nexport default App;","import ErrorIndicator from './ErrorIndicator';\n\nexport default ErrorIndicator;","import React from 'react';\n\n\ninterface infoProps {\n    info: string\n}\n\nconst ErrorIndicator: React.FC<infoProps> = ({info}) =>{\n\n    return (\n        <div className='ErrorIndicator'>\n            <div className=\"alert alert-danger\" role=\"alert\">\n                <h4 className=\"alert-heading\">Error!</h4>\n                <p>{info || ':('}</p>\n                <p className=\"mb-0\"></p>\n            </div>\n        </div>\n    );\n};\n\nexport default ErrorIndicator;","import ErrorBoundry from './ErrorBoundry';\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport ErrorIndicator from '../ErrorIndicator';\n\n\ninterface IState{\n    hasError: boolean | null,\n    readonly error: Error | null | undefined;\n    errorInfo:any ,\n\n}\n\ninterface IProps{\n\n}\n\n\n\nexport default class ErrorBoundry extends Component<IProps, IState>{\n\n\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            hasError: null,\n            error: null,\n            errorInfo: null\n        };\n    }\n\n\n\n    componentDidCatch(error: Error | null, errorInfo: any) {\n\n        this.setState({\n                             hasError:true,\n                                error,\n                              errorInfo\n                            })\n    }\n\n    render() {\n\n        if(this.state.hasError){\n\n\n            return <ErrorIndicator\n                info={`${this.state.error && this.state.error.toString() || 'NoNe'} ${ this.state.errorInfo && this.state.errorInfo.componentStack || 'NoNe'}`}/>;\n        }\n\n        return this.props.children;\n\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport ErrorBoundry from './components/ErrorBoundry';\n\n\nReactDOM.render(\n    <ErrorBoundry>\n    <App />\n    </ErrorBoundry>, document.getElementById('root'));\n\n"],"sourceRoot":""}